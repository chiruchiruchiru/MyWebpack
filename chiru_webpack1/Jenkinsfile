def VAL="sample value"

pipeline { // Declarative pipelineであることを宣言する
  environment {
    fileName = "text/output.txt"
  }
  agent any
  stages {
    stage("get resource") {
      steps {
        git 'https://github.com/chiruchiruchiru/MyWebpack.git'
      }
    }
    stage('confirm production') {
        when {
            expression {
                GIT_BRANCH = sh(script: 'git rev-parse --abbrev-ref HEAD', returnStdout: true).trim()
                return GIT_BRANCH == 'master'
            }
        }
        steps {
            echo 'production'
        }
    }
    stage('confirm develop') {
        when {
          not {
            expression {
              GIT_BRANCH = sh(script: 'git rev-parse --abbrev-ref HEAD', returnStdout: true).trim()
              return GIT_BRANCH == 'master'
            }
          }
        }
        steps {
            echo 'develop'
        }
    }
    stage('write file') {
      steps {
          writeFile(file: fileName, text: "あああああ")
      }
    }
    stage('archive artifacts') {
        steps {
          archiveArtifacts fileName
        }
    }
    stage('Run test') {
      steps {
        script {
          sh "pwd"
          def aaa = sh (script: "pwd", returnStdout: false)
          def bbb = sh (script: "pwd", returnStatus: false)

          echo "${aaa}"
          echo "${bbb}"
          if (sh (script: "pwd", returnStatus: false) == '0') {
            echo "OK"
          }
          sh "ls -a"
          sh "mkdir -p ./rrr/ttt"
        }

      }
    }
    stage("Hello") {
      steps {
        script {
          try {
            sh "almxsp"
          }
          catch(error) {
            echo "${error}"
            echo 'なにやらエラーです'
          }
          finally {
            echo '成功時も失敗時も実行されます'
          }
        }
      }
    }
    // stage('引渡し') {
    //   steps {
    //     build job: 'commit-release', parameters: [
    //       string(name: 'TEXT', value: '吾輩は猫だ')
    //     ]
    //   }
    // }
  }
  post {
    failure {
      echo 'my webpack failed'
    }
  }
}